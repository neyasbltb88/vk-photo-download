{"version":3,"sources":["node_modules/browser-pack/_prelude.js","app/scripts/modules/photo-download.js","app/scripts/vk-photo-download.js","node_modules/downloadjs/download.js"],"names":[],"mappings":"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":"../vk-photo-download.min.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","import Download from 'downloadjs';\r\n\r\nexport default class PhotoDownload {\r\n    constructor() {\r\n        this.photoDownload_id = 'PhotoDownload';\r\n        this.imgContainer_id = 'pv_photo';\r\n        this.imgContainer_class = 'pv_image_wrap';\r\n\r\n        // Объект с описанием обработчиков\r\n        this.triggers = {\r\n            mouseover: [\r\n                // Селектор ссылки, в которую обернута картинка в просмотрщике\r\n                {\r\n                    type: 'id',\r\n                    selector: this.imgContainer_id,\r\n                    handler: this._updateBtn,\r\n                    child: true,\r\n                },\r\n                {\r\n                    type: 'class',\r\n                    selector: 'PhotoDownload_btn',\r\n                    handler: this._updateBtn,\r\n                    child: true,\r\n                },\r\n            ], // Конец mouseover\r\n        };\r\n\r\n        // id, который добавится тегу style\r\n        this.style_id = 'PhotoDownloadStyle';\r\n        // Объект, генерирующий разноцветные иконки\r\n        this.icons = {\r\n            _colors: {\r\n                green: '#00B75A',\r\n                red: '#F92672',\r\n                white: '#FFFFFF',\r\n                yellow: '#FFC000',\r\n            },\r\n            _prefix: 'data:image/svg+xml;charset=utf-8,',\r\n            /* html */\r\n            _template: `<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\">\r\n                            <path fill=\"{{color}}\" d=\"M 4,0 4,8 0,8 8,16 16,8 12,8 12,0 4,0 z\"/>\r\n                        </svg>`,\r\n            _temp: function(color) {\r\n                return this._template.replace(/\\{\\{.*\\}\\}/gm, color ? color : 'white');\r\n            },\r\n            get(color, url = true) {\r\n                let _color = this._colors[color] ? this._colors[color] : color;\r\n                let svg = this._temp(_color).replace(/[\\s]{2,}/gm, ' ');\r\n                return url ? this._prefix + encodeURIComponent(svg) : svg;\r\n            }\r\n        };\r\n\r\n        this.last_image_data = {\r\n            src: null,\r\n            width: null,\r\n            height: null,\r\n        };\r\n\r\n\r\n        // Точка входа\r\n        this.init();\r\n    }\r\n\r\n    _updateBtn(elem) {\r\n        let parent = elem.closest('.' + this.imgContainer_class);\r\n\r\n        // Если в родительском контейнере еще нет кнопки\r\n        if (!parent.querySelector('#' + this.photoDownload_id)) {\r\n            // то создадим ее\r\n            this._createDownloadContainer(elem);\r\n        }\r\n\r\n        let btn = parent.querySelector('.PhotoDownload_btn');\r\n        let size = parent.querySelector('.PhotoDownload_size');\r\n        this.last_image_data = window.Photoview.genData(cur.pvCurPhoto);\r\n\r\n        // Если ссылка в кнопке не та, которая нужна сейчас\r\n        if (btn.href !== this.last_image_data.src) {\r\n            console.log('btn.href !== this.last_image_data.src');\r\n\r\n            btn.href = this.last_image_data.src;\r\n\r\n            if (this.last_image_data.width && this.last_image_data.height) {\r\n                size.classList.remove('non_size');\r\n                size.textContent = `${this.last_image_data.width}x${this.last_image_data.height}`;\r\n            } else {\r\n                size.classList.add('non_size');\r\n                size.textContent = '';\r\n            }\r\n        }\r\n    }\r\n\r\n    _createDownloadContainer(elem) {\r\n        let parent = elem.closest('.' + this.imgContainer_class);\r\n        let wrap = document.createElement('div');\r\n        wrap.id = this.photoDownload_id;\r\n\r\n        wrap.innerHTML = this._createInnerElems();\r\n\r\n        setTimeout(() => {\r\n            wrap.classList.add('ready');\r\n        }, 0);\r\n\r\n        parent.appendChild(wrap);\r\n    }\r\n\r\n    _createInnerElems() {\r\n        return /* html */ `\r\n            <a class=\"PhotoDownload_btn\" href=\"#!\" target=\"_blank\" draggable=\"false\">\r\n                <div class=\"PhotoDownload_icon\"></div>\r\n                <div class=\"PhotoDownload_size\"></div>\r\n            </a>\r\n        `;\r\n    }\r\n\r\n    _createStyleContent() {\r\n        return /* css */ `\r\n        #${this.photoDownload_id} {\r\n            background-color: #000;\r\n            border-top-left-radius: 4px;\r\n            position: absolute;\r\n            bottom: 0;\r\n            left: 100%;\r\n            opacity: 0;\r\n            transform: translate3d(-38px, 0, 1px);\r\n            will-change: transform, opacity;\r\n            transition: opacity .25s ease-in-out, transform .25s ease-in-out !important;\r\n        }\r\n        .${this.imgContainer_class}:hover #${this.photoDownload_id}.ready {\r\n            opacity: .3;\r\n        }\r\n        .${this.imgContainer_class} #${this.photoDownload_id}.ready:hover {\r\n            opacity: .8;\r\n            transform: translate3d(-100%, 0, 1px);\r\n        }\r\n        .PhotoDownload_btn {\r\n            display: flex;\r\n            align-items: center;\r\n            padding: 10px;\r\n        }\r\n        .PhotoDownload_btn:hover {\r\n            text-decoration: none;\r\n        }\r\n        .PhotoDownload_icon {\r\n            background-image: url('${this.icons.get('white')}');\r\n            background-size: contain;\r\n            background-repeat: no-repeat;\r\n            height: 18px;\r\n            width: 18px;\r\n        }\r\n        .PhotoDownload_btn:hover .PhotoDownload_icon {\r\n            background-image: url('${this.icons.get('green')}');\r\n        }\r\n        #${this.photoDownload_id} .PhotoDownload_size:not(.non_size) {\r\n            padding-left: 10px;\r\n            color: #C3CFE0 !important;\r\n        }\r\n        `;\r\n    }\r\n\r\n    // Метод для тестовой подсветки элемента на котором сработал watcher\r\n    _highlighter(elem, timeout) {\r\n        elem.classList.add('photo_download_highlight');\r\n\r\n        setTimeout(() => {\r\n            elem.classList.remove('photo_download_highlight');\r\n        }, timeout);\r\n    }\r\n\r\n    _checkComplianceChild(target, trigger) {\r\n        let parent = (trigger.type === 'id') ?\r\n            target.closest('#' + trigger.selector) :\r\n            target.closest('.' + trigger.selector);\r\n\r\n        if (parent) {\r\n            this._checkComplianceTarget(parent, trigger);\r\n        }\r\n    }\r\n\r\n    _checkComplianceTarget(target, trigger) {\r\n        let compliance = false;\r\n\r\n        // Два отдельных условия для того, чтобы была возможность назначить\r\n        // разные обработчики по id и по классу на один элемент, и они сработали оба\r\n        if (trigger.type === 'id') {\r\n            if (target.id === trigger.selector) {\r\n                compliance = true;\r\n\r\n                if (trigger.handler) {\r\n                    // console.log('> ' + trigger.selector);\r\n                    trigger.handler.call(this, target);\r\n                }\r\n            }\r\n        }\r\n\r\n        if (trigger.type === 'class') {\r\n            if (target.classList.contains(trigger.selector)) {\r\n                compliance = true;\r\n\r\n                if (trigger.handler) {\r\n                    // console.log('> ' + trigger.selector);\r\n                    trigger.handler.call(this, target);\r\n                }\r\n            }\r\n        }\r\n\r\n        return compliance;\r\n    }\r\n\r\n    // Метод, который вызывает нужный обработчик при нужном событии\r\n    _watchTrigger(event) {\r\n        // Смотрим, есть ли обработчики полученного типа события\r\n        // На самом деле они всегда должны быть, но все же\r\n        let triggers = this.triggers[event.type];\r\n        if (triggers === undefined) return;\r\n\r\n        // Берем элемент, на котором сработало событие\r\n        let target = event.target;\r\n\r\n        // Цикл по объекту обработчиков полученного типа события\r\n        triggers.forEach(trigger => {\r\n            // Если цели события нет в объекте обработчиков, но в обработчике указано, \r\n            // что он может срабатывать на дочернем элементе\r\n            if (!this._checkComplianceTarget(target, trigger) && trigger.child) {\r\n                // Попробуем найти родительский элемент цели, соответствующий селектору\r\n                // из объекта обработчиков\r\n                this._checkComplianceChild(target, trigger);\r\n            }\r\n        });\r\n    }\r\n\r\n    // Установка на document слушателей типов событий, имеющихся в объекте обработчиков\r\n    _initWatcher() {\r\n        let types = Object.keys(this.triggers);\r\n        types.forEach(type => document.addEventListener(type, this._watchTrigger.bind(this)))\r\n    }\r\n\r\n    // Метод добавления на страницу стилей, необходимых для работы PhotoDownload\r\n    _injectCSS() {\r\n        let style = document.createElement('style');\r\n        style.id = this.style_id;\r\n        style.textContent = this._createStyleContent();\r\n\r\n        document.head.appendChild(style);\r\n    }\r\n\r\n\r\n    // Точка входа\r\n    init() {\r\n        console.log('%c%s', (window.log_color) ? window.log_color.blue : '', 'PhotoDownload: Init');\r\n\r\n        // Добавляем стили PhotoDownload\r\n        this._injectCSS();\r\n\r\n        // Инициализируем обработчики событий\r\n        this._initWatcher();\r\n    }\r\n}","import PhotoDownload from './modules/photo-download';\r\n\r\n\r\nwindow.photoDownload = new PhotoDownload();","//download.js v4.2, by dandavis; 2008-2016. [MIT] see http://danml.com/download.html for tests/usage\n// v1 landed a FF+Chrome compat way of downloading strings to local un-named files, upgraded to use a hidden frame and optional mime\n// v2 added named files via a[download], msSaveBlob, IE (10+) support, and window.URL support for larger+faster saves than dataURLs\n// v3 added dataURL and Blob Input, bind-toggle arity, and legacy dataURL fallback was improved with force-download mime and base64 support. 3.1 improved safari handling.\n// v4 adds AMD/UMD, commonJS, and plain browser support\n// v4.1 adds url download capability via solo URL argument (same domain/CORS only)\n// v4.2 adds semantic variable names, long (over 2MB) dataURL support, and hidden by default temp anchors\n// https://github.com/rndme/download\n\n(function (root, factory) {\n\tif (typeof define === 'function' && define.amd) {\n\t\t// AMD. Register as an anonymous module.\n\t\tdefine([], factory);\n\t} else if (typeof exports === 'object') {\n\t\t// Node. Does not work with strict CommonJS, but\n\t\t// only CommonJS-like environments that support module.exports,\n\t\t// like Node.\n\t\tmodule.exports = factory();\n\t} else {\n\t\t// Browser globals (root is window)\n\t\troot.download = factory();\n  }\n}(this, function () {\n\n\treturn function download(data, strFileName, strMimeType) {\n\n\t\tvar self = window, // this script is only for browsers anyway...\n\t\t\tdefaultMime = \"application/octet-stream\", // this default mime also triggers iframe downloads\n\t\t\tmimeType = strMimeType || defaultMime,\n\t\t\tpayload = data,\n\t\t\turl = !strFileName && !strMimeType && payload,\n\t\t\tanchor = document.createElement(\"a\"),\n\t\t\ttoString = function(a){return String(a);},\n\t\t\tmyBlob = (self.Blob || self.MozBlob || self.WebKitBlob || toString),\n\t\t\tfileName = strFileName || \"download\",\n\t\t\tblob,\n\t\t\treader;\n\t\t\tmyBlob= myBlob.call ? myBlob.bind(self) : Blob ;\n\t  \n\t\tif(String(this)===\"true\"){ //reverse arguments, allowing download.bind(true, \"text/xml\", \"export.xml\") to act as a callback\n\t\t\tpayload=[payload, mimeType];\n\t\t\tmimeType=payload[0];\n\t\t\tpayload=payload[1];\n\t\t}\n\n\n\t\tif(url && url.length< 2048){ // if no filename and no mime, assume a url was passed as the only argument\n\t\t\tfileName = url.split(\"/\").pop().split(\"?\")[0];\n\t\t\tanchor.href = url; // assign href prop to temp anchor\n\t\t  \tif(anchor.href.indexOf(url) !== -1){ // if the browser determines that it's a potentially valid url path:\n        \t\tvar ajax=new XMLHttpRequest();\n        \t\tajax.open( \"GET\", url, true);\n        \t\tajax.responseType = 'blob';\n        \t\tajax.onload= function(e){ \n\t\t\t\t  download(e.target.response, fileName, defaultMime);\n\t\t\t\t};\n        \t\tsetTimeout(function(){ ajax.send();}, 0); // allows setting custom ajax headers using the return:\n\t\t\t    return ajax;\n\t\t\t} // end if valid url?\n\t\t} // end if url?\n\n\n\t\t//go ahead and download dataURLs right away\n\t\tif(/^data:([\\w+-]+\\/[\\w+.-]+)?[,;]/.test(payload)){\n\t\t\n\t\t\tif(payload.length > (1024*1024*1.999) && myBlob !== toString ){\n\t\t\t\tpayload=dataUrlToBlob(payload);\n\t\t\t\tmimeType=payload.type || defaultMime;\n\t\t\t}else{\t\t\t\n\t\t\t\treturn navigator.msSaveBlob ?  // IE10 can't do a[download], only Blobs:\n\t\t\t\t\tnavigator.msSaveBlob(dataUrlToBlob(payload), fileName) :\n\t\t\t\t\tsaver(payload) ; // everyone else can save dataURLs un-processed\n\t\t\t}\n\t\t\t\n\t\t}else{//not data url, is it a string with special needs?\n\t\t\tif(/([\\x80-\\xff])/.test(payload)){\t\t\t  \n\t\t\t\tvar i=0, tempUiArr= new Uint8Array(payload.length), mx=tempUiArr.length;\n\t\t\t\tfor(i;i<mx;++i) tempUiArr[i]= payload.charCodeAt(i);\n\t\t\t \tpayload=new myBlob([tempUiArr], {type: mimeType});\n\t\t\t}\t\t  \n\t\t}\n\t\tblob = payload instanceof myBlob ?\n\t\t\tpayload :\n\t\t\tnew myBlob([payload], {type: mimeType}) ;\n\n\n\t\tfunction dataUrlToBlob(strUrl) {\n\t\t\tvar parts= strUrl.split(/[:;,]/),\n\t\t\ttype= parts[1],\n\t\t\tdecoder= parts[2] == \"base64\" ? atob : decodeURIComponent,\n\t\t\tbinData= decoder( parts.pop() ),\n\t\t\tmx= binData.length,\n\t\t\ti= 0,\n\t\t\tuiArr= new Uint8Array(mx);\n\n\t\t\tfor(i;i<mx;++i) uiArr[i]= binData.charCodeAt(i);\n\n\t\t\treturn new myBlob([uiArr], {type: type});\n\t\t }\n\n\t\tfunction saver(url, winMode){\n\n\t\t\tif ('download' in anchor) { //html5 A[download]\n\t\t\t\tanchor.href = url;\n\t\t\t\tanchor.setAttribute(\"download\", fileName);\n\t\t\t\tanchor.className = \"download-js-link\";\n\t\t\t\tanchor.innerHTML = \"downloading...\";\n\t\t\t\tanchor.style.display = \"none\";\n\t\t\t\tdocument.body.appendChild(anchor);\n\t\t\t\tsetTimeout(function() {\n\t\t\t\t\tanchor.click();\n\t\t\t\t\tdocument.body.removeChild(anchor);\n\t\t\t\t\tif(winMode===true){setTimeout(function(){ self.URL.revokeObjectURL(anchor.href);}, 250 );}\n\t\t\t\t}, 66);\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\t// handle non-a[download] safari as best we can:\n\t\t\tif(/(Version)\\/(\\d+)\\.(\\d+)(?:\\.(\\d+))?.*Safari\\//.test(navigator.userAgent)) {\n\t\t\t\tif(/^data:/.test(url))\turl=\"data:\"+url.replace(/^data:([\\w\\/\\-\\+]+)/, defaultMime);\n\t\t\t\tif(!window.open(url)){ // popup blocked, offer direct download:\n\t\t\t\t\tif(confirm(\"Displaying New Document\\n\\nUse Save As... to download, then click back to return to this page.\")){ location.href=url; }\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\t//do iframe dataURL download (old ch+FF):\n\t\t\tvar f = document.createElement(\"iframe\");\n\t\t\tdocument.body.appendChild(f);\n\n\t\t\tif(!winMode && /^data:/.test(url)){ // force a mime that will download:\n\t\t\t\turl=\"data:\"+url.replace(/^data:([\\w\\/\\-\\+]+)/, defaultMime);\n\t\t\t}\n\t\t\tf.src=url;\n\t\t\tsetTimeout(function(){ document.body.removeChild(f); }, 333);\n\n\t\t}//end saver\n\n\n\n\n\t\tif (navigator.msSaveBlob) { // IE10+ : (has Blob, but not a[download] or URL)\n\t\t\treturn navigator.msSaveBlob(blob, fileName);\n\t\t}\n\n\t\tif(self.URL){ // simple fast and modern way using Blob and URL:\n\t\t\tsaver(self.URL.createObjectURL(blob), true);\n\t\t}else{\n\t\t\t// handle non-Blob()+non-URL browsers:\n\t\t\tif(typeof blob === \"string\" || blob.constructor===toString ){\n\t\t\t\ttry{\n\t\t\t\t\treturn saver( \"data:\" +  mimeType   + \";base64,\"  +  self.btoa(blob)  );\n\t\t\t\t}catch(y){\n\t\t\t\t\treturn saver( \"data:\" +  mimeType   + \",\" + encodeURIComponent(blob)  );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Blob but not URL support:\n\t\t\treader=new FileReader();\n\t\t\treader.onload=function(e){\n\t\t\t\tsaver(this.result);\n\t\t\t};\n\t\t\treader.readAsDataURL(blob);\n\t\t}\n\t\treturn true;\n\t}; /* end download() */\n}));\n"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}